<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Image1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>